name: Build Android

on:
  push:
  pull_request:

jobs:
    wait_for_version_bump:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/feature/redesign'
      steps:
        - name: Wait for version bump workflow
          uses: lewagon/wait-on-check-action@v1.3.1
          with:
            ref: ${{ github.ref }}
            check-name: 'bump_version'
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            wait-interval: 10
            allowed-conclusions: success

    build_android:
        runs-on: ubuntu-latest
        needs: [wait_for_version_bump]
        if: always() && (github.ref != 'refs/heads/feature/redesign' || (github.ref == 'refs/heads/feature/redesign' && needs.wait_for_version_bump.result == 'success'))
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                ref: ${{ github.ref }}
                fetch-depth: 0     
            - uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: '18'
            - name: Install Flutter
              uses: subosito/flutter-action@v2
              with:
                channel: 'stable'
                #cache: true # Speed up the process
            - name: Get current version
              id: get_version
              run: |
                CURRENT_VERSION=$(grep 'version:' pubspec.yaml | sed -E 's/version: ([0-9]+\.[0-9]+\.[0-9]+)\+([0-9]+)/\1+\2/')
                echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT       
            - name: Get dependencies
              run: flutter pub get  
            - name: Putting secret data
              env:
                DATA: ${{ secrets.GOOGLESERVICES }}
              run: echo $DATA > /home/runner/work/pola-flutter/pola-flutter/android/app/google-services.json
            - name: Build prod apk
              run: flutter build apk --flavor prod --debug --verbose
            - name: Archive prod APK
              run: |
                mkdir -p /tmp/artifacts
                cp build/app/outputs/flutter-apk/app-prod-debug.apk /tmp/artifacts/
                echo "artifact_path=/tmp/artifacts/app-prod-debug.apk" >> $GITHUB_OUTPUT
            - name: Build QA APK
              run: flutter build apk --flavor qa --debug --verbose
            - name: Install Firebase CLI
              run: npm install -g firebase-tools  
            - name: Get all commit messages from push
              id: get_commits
              run: |
                if git rev-parse HEAD^1 >/dev/null 2>&1; then
                  if [ "${{ github.event_name }}" == "pull_request" ]; then
                    COMMIT_MESSAGES=$(git log --pretty=format:"• %s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
                  else
                    COMMIT_MESSAGES=$(git log --pretty=format:"• %s" @{u}..HEAD)
                    
                    if [ -z "$COMMIT_MESSAGES" ]; then
                      COMMIT_MESSAGES=$(git log -10 --pretty=format:"• %s")
                    fi
                  fi
                else
                  COMMIT_MESSAGES=$(git log --pretty=format:"• %s")
                fi
                
                COMMIT_MESSAGES=$(echo "$COMMIT_MESSAGES" | sed 's/"/\\"/g')
                
                echo "commit_messages<<EOF" >> $GITHUB_OUTPUT
                echo "$COMMIT_MESSAGES" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT  
              
            - name: Deploy QA to Firebase App Distribution
              if: github.ref == 'refs/heads/feature/redesign'
              env:
                FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
                FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
              run: |
                if [ -n "${{ steps.get_commits.outputs.commit_messages }}" ]; then
                  RELEASE_NOTES="Automatyczny build v${{ steps.get_version.outputs.current_version }} Pola App QA 3
                ${{ steps.get_commits.outputs.commit_messages }}"
                  else
                   RELEASE_NOTES="Automatyczny build v${{ steps.get_version.outputs.current_version }} Pola App QA 3 - commit: ${{ github.sha }}"
                  fi

                firebase appdistribution:distribute build/app/outputs/flutter-apk/app-qa-debug.apk \
                  --app $FIREBASE_APP_ID \
                  --token $FIREBASE_TOKEN \
                  --groups "QA-Group" \
                  --release-notes "$RELEASE_NOTES"
            - name: Archive qa APK
              run: |
                mkdir -p /tmp/artifacts
                cp build/app/outputs/flutter-apk/app-qa-debug.apk /tmp/artifacts/
                echo "artifact_path=/tmp/artifacts/app-qa-debug.apk" >> $GITHUB_OUTPUT
